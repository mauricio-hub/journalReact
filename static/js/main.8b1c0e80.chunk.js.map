{"version":3,"sources":["hooks/useForm.js","firebase/firebase-config.js","types/types.js","actions/ui.js","helpers/loadNotes.js","helpers/fileUpload.js","actions/notes.js","actions/auth.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/juornal/JournalEntry.js","components/juornal/JournalEntries.js","components/juornal/Sidebar.js","components/juornal/NothingSelected.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/juornal/JournalScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouters.js","reducers/uiReducer.js","reducers/notesReducers.js","store/store.js","reducers/authReducer.js","AppJournal.js","index.js"],"names":["useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","types","setError","err","type","payload","finishLoading","loadNotes","uid","a","collection","get","notesSnap","notes","forEach","snaphijo","push","id","data","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","activeNote","note","AddNewNote","startLoadingNotes","dispatch","setNotes","startSaveNotes","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","e","message","logout","LoginScreen","useDispatch","loading","useSelector","state","ui","formValues","className","onSubmit","preventDefault","placeholder","autoComplete","onChange","disable","toString","onClick","signInWithPopup","src","alt","to","RegisterScreen","msgError","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","JournalEntry","date","noteDate","moment","style","backgroundSize","backgroundImage","format","JournalEntries","map","Sidebar","signOut","newNote","Date","getTime","add","NothingSelected","NotesAppBar","active","display","files","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NoteScreen","activeId","useRef","Id","useEffect","current","delete","startDeleting","JournalScreen","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","inititalState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","AppJournal","ReactDOM","render","getElementById"],"mappings":"0PAGaA,EAAU,WAA0B,IAAxBC,EAAuB,uDAAR,GAAQ,EAEhBC,mBAASD,GAFO,mBAErCE,EAFqC,KAE7BC,EAF6B,KAItCC,EAAQ,WAAkC,IAAjCC,EAAgC,uDAAjBL,EAC1BG,EAAWE,IAITC,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEzBJ,EAAU,2BACHD,GADE,kBAEHK,EAAOC,KAAQD,EAAOE,UAKhC,MAAO,CAAEP,EAAQI,EAAmBF,I,qCCNtCM,IAASC,cAXa,CACpBC,OAAQ,0CACRC,WAAY,yCACZC,YAAa,gDACbC,UAAW,yBACXC,cAAe,qCACfC,kBAAmB,eACnBC,MAAO,8CAMT,IAAMC,EAAKT,IAASU,YAEdC,EAAqB,IAAIX,IAASY,KAAKC,mBCnBlCC,EACF,eADEA,EAED,gBAFCA,EAIG,iBAJHA,EAKM,oBALNA,EAOO,qBAPPA,EAQQ,sBARRA,EAUI,mBAVJA,EAWI,0BAXJA,EAYE,qBAZFA,EAaK,uBAbLA,EAeI,sBAfJA,EAgBY,0BCZZC,EAAW,SAACC,GAAD,MAAQ,CAC/BC,KAAKH,EACLI,QAAQF,IAaIG,EAAgB,iBAAK,CACjCF,KAAKH,IChBOM,EAAS,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,sEAEAb,EAAGc,WAAH,UAAiBF,EAAjB,mBAAsCG,MAFtC,cAElBC,EAFkB,OAIlBC,EAAQ,GAEdD,EAAUE,SAAS,SAAAC,GAClBF,EAAMG,KAAN,aACCC,GAAGF,EAASE,IACTF,EAASG,YATU,kBAiBjBL,GAjBiB,2CAAH,sDCDTM,EAAU,uCAAG,WAAQC,GAAR,mBAAAX,EAAA,4DAEL,oDAEXY,EAAW,IAAIC,UACZC,OAAO,gBAAgB,iBAChCF,EAASE,OAAO,OAAQH,GANF,kBAUCI,MARN,mDAQuB,CAChCC,OAAQ,OACRC,KAAML,IAZQ,YAUZM,EAVY,QAeRC,GAfQ,kCAgBUD,EAAKE,OAhBf,eAgBRC,EAhBQ,yBAiBPA,EAAUC,YAjBH,yBAmBFJ,EAAKE,OAnBH,oJAAH,sDCgCVG,EAAa,SAACf,EAAGgB,GAAJ,MAAY,CACrC7B,KAAKH,EACLI,QAAQ,aACPY,MACGgB,KAIQC,EAAY,SAACjB,EAAGgB,GAAJ,MAAY,CACpC7B,KAAKH,EACLI,QAAQ,aACPY,MAAMgB,KAIKE,EAAoB,SAAC3B,GACjC,8CAAO,WAAO4B,GAAP,eAAA3B,EAAA,sEACcF,EAAUC,GADxB,OACAK,EADA,OAENuB,EAASC,EAASxB,IAFZ,2CAAP,uDAYawB,EAAW,SAACxB,GAAD,MAAW,CAEnCT,KAAKH,EACLI,QAASQ,IAMGyB,EAAiB,SAACL,GAE9B,8CAAO,WAAOG,EAASG,GAAhB,iBAAA9B,EAAA,6DAICD,EAAO+B,IAAWxC,KAAlBS,IAGHyB,EAAKO,YACDP,EAAKO,WAIPC,EAZA,eAYqBR,IAGJhB,GAfjB,SAgBArB,EAAG8C,IAAH,UAAUlC,EAAV,0BAA+ByB,EAAKhB,KAAM0B,OAAOF,GAhBjD,OAkBNL,EAASQ,EAAYX,EAAKhB,GAAGwB,IAC7BI,IAAKC,KAAK,QAAQb,EAAKc,MAAM,WAnBvB,2CAAP,yDA0BYH,EAAc,SAAC3B,EAAGgB,GAAJ,MAAY,CACtC7B,KAAKH,EACLI,QAAQ,CACPY,KACAgB,KAAK,aACJhB,MACGgB,MAyCOe,EAAa,SAAC/B,GAAD,MAAO,CAChCb,KAAKH,EACLI,QAAQY,IC9IIgC,EAA0B,SAACC,EAAOC,GAC3C,OAAO,SAACf,GAEJA,EJKyB,CAChChC,KAAKH,IIHEd,IAASY,OAAOqD,2BAA4BF,EAAOC,GAC9CE,MAAM,YAAe,IAAZC,EAAW,EAAXA,KACNlB,EAASmB,EAAOD,EAAK9C,IAAK8C,EAAKE,cAE/BpB,EAAU9B,QAEbmD,OAAO,SAAAC,GAEJtB,EAAU9B,KACVuC,IAAKC,KAAK,QAASY,EAAEC,QAAS,cA4CjCJ,EAAQ,SAAC/C,EAAKgD,GAAN,MAAuB,CACxCpD,KAAMH,EACNI,QAAS,CACLG,MACAgD,iBAeKI,EAAS,iBAAO,CACzBxD,KAAMH,IChFG4D,EAAc,WAE1B,IAAMzB,EAAS0B,cAELC,EAAWC,aAAY,SAAAC,GAAK,OAAGA,EAAMC,MAArCH,QAJsB,EAMOvF,EAAQ,CAC9C0E,MAAM,iBACNC,SAAS,WARsB,mBAMzBgB,EANyB,KAMdpF,EANc,KAazBmE,EAAiBiB,EAAjBjB,MAAOC,EAAUgB,EAAVhB,SAad,OAIC,gCACE,oBAAIiB,UAAU,cAAd,mBAEQ,uBAAMC,SAjBG,SAACX,GACpBA,EAAEY,iBAEFlC,EAASa,EAAwBC,EAAMC,KAcEiB,UAAU,oDAAzC,UAEI,uBACIhE,KAAK,OACLmE,YAAY,QACZtF,KAAK,QACLmF,UAAU,cACVI,aAAa,MACbtF,MAAQgE,EACRuB,SAAW1F,IAGf,uBACIqB,KAAK,WACLmE,YAAY,WACZtF,KAAK,WACLmF,UAAU,cACVlF,MAAQiE,EACRsB,SAAW1F,IAIf,wBACIqB,KAAK,SACLgE,UAAU,4BACVM,QAASX,EAAQY,WAHrB,mBASA,sBAAKP,UAAU,wBAAf,UACI,2DAEA,sBACIA,UAAU,aACXQ,QA/CO,WACtBxC,GDwBG,SAAEA,GAELjD,IAASY,OAAO8E,gBAAiB/E,GAC5BuD,MAAM,YAAe,IAAZC,EAAW,EAAXA,KACNlB,EACImB,EAAOD,EAAK9C,IAAK8C,EAAKE,qBCetB,UAII,qBAAKY,UAAU,sBAAf,SACI,qBAAKA,UAAU,cAAcU,IAAI,8EAA8EC,IAAI,oBAEvH,mBAAGX,UAAU,WAAb,SACI,4DAKZ,cAAC,IAAD,CACIY,GAAG,iBACHZ,UAAU,OAFd,uC,iBC9EHa,EAAiB,WAE1B,IAAM7C,EAAW0B,cAEToB,EAAalB,aAAa,SAAAC,GAAK,OAAIA,EAAMC,MAAzCgB,SAJwB,EAMU1G,EAAQ,CAC9CS,KAAM,GACNiE,MAAO,GACPC,SAAU,GACVgC,UAAW,KAViB,mBAMxBhB,EANwB,KAMZpF,EANY,KAaxBE,EAAqCkF,EAArClF,KAAMiE,EAA+BiB,EAA/BjB,MAAOC,EAAwBgB,EAAxBhB,SAAUgC,EAAchB,EAAdgB,UAWzBC,EAAc,WAEhB,OAA4B,IAAvBnG,EAAKoG,OAAOC,QACblD,EAAUlC,EAAS,sBACZ,GACEqF,IAAUC,QAAStC,GAGpBC,IAAagC,GAAahC,EAASmC,OAAS,GACpDlD,EAAUlC,EAAS,mEACZ,IAGXkC,ENpCwB,CAC/BhC,KAAKH,KMoCQ,IARFmC,EAAUlC,EAAS,wBACZ,IAUf,OACI,qCACI,oBAAIkE,UAAU,cAAd,sBAEA,uBAAMC,SA9BS,SAACX,GACpBA,EAAEY,iBAEGc,KACDhD,EFGsC,SAAEc,EAAOC,EAAUlE,GACjE,OAAO,SAAEmD,GAELjD,IAASY,OAAO0F,+BAAgCvC,EAAOC,GAClDE,KADL,uCACW,6BAAA5C,EAAA,6DAAQ6C,EAAR,EAAQA,KAAR,SAEGA,EAAKoC,cAAc,CAAElC,YAAavE,IAFrC,OAIHmD,EACImB,EAAOD,EAAK9C,IAAK8C,EAAKE,cALvB,2CADX,uDASKC,OAAO,SAAAC,GAEJb,IAAKC,KAAK,QAASY,EAAEC,QAAS,aEjBxBgC,CAAmCzC,EAAOC,EAAUlE,KA0B5BmF,UAAU,oDAA5C,UAGQc,GAEI,qBAAKd,UAAU,oBAAf,SACMc,IAMd,uBACI9E,KAAK,OACLmE,YAAY,OACZtF,KAAK,OACLmF,UAAU,cACVI,aAAa,MACbtF,MAAQD,EACRwF,SAAW1F,IAGf,uBACIqB,KAAK,OACLmE,YAAY,QACZtF,KAAK,QACLmF,UAAU,cACVI,aAAa,MACbtF,MAAQgE,EACRuB,SAAW1F,IAGf,uBACIqB,KAAK,WACLmE,YAAY,WACZtF,KAAK,WACLmF,UAAU,cACVlF,MAAQiE,EACRsB,SAAW1F,IAGf,uBACIqB,KAAK,WACLmE,YAAY,mBACZtF,KAAK,YACLmF,UAAU,cACVlF,MAAQiG,EACRV,SAAW1F,IAIf,wBACIqB,KAAK,SACLgE,UAAU,iCAFd,sBASA,cAAC,IAAD,CACIY,GAAG,cACHZ,UAAU,OAFd,wCC3GHwB,EAAa,WACzB,OACC,qBAAKxB,UAAU,aAAf,SAEC,qBAAKA,UAAU,sBAAf,SAGA,eAAC,IAAD,WACA,cAAC,IAAD,CACAyB,OAAK,EACLC,KAAK,cACLC,UAAWlC,IAGX,cAAC,IAAD,CACAgC,OAAK,EACLC,KAAK,iBACLC,UAAWd,IAGX,cAAC,IAAD,CAAUD,GAAG,wB,kBCtBHgB,GAAe,SAAC,GAA8B,IAA7B/E,EAA4B,EAA5BA,GAAGgF,EAAyB,EAAzBA,KAAKlD,EAAoB,EAApBA,MAAMrB,EAAc,EAAdA,KAAKc,EAAS,EAATA,IAG1CJ,EAAW0B,cAEXoC,EAAWC,KAAOF,GAUxB,OACC,sBAAK7B,UAAU,4EACfQ,QATwB,WACxBxC,EAASJ,EAAWf,EAAG,CACtBgF,OAAKlD,QAAMrB,OAAKc,UAMjB,UAMEA,GACD,qBACA4B,UAAU,yBACVgC,MAAO,CACLC,eAAgB,QAChBC,gBAAe,cAAU9D,EAAV,QAQjB,sBAAK4B,UAAU,sBAAf,UACC,mBAAGA,UAAU,uBAAb,SACCrB,IAED,mBAAGqB,UAAU,yBAAb,SACC1C,OAKF,sBAAK0C,UAAU,0BAAf,UACC,+BAAO8B,EAASK,OAAO,UACvB,6BAAKL,EAASK,OAAO,eC/CZC,GAAiB,WAAO,IAE7B3F,EAASmD,aAAY,SAAAC,GAAK,OAAIA,EAAMpD,SAApCA,MAGP,OACC,qBAAKuD,UAAU,oBAAf,SAGEvD,EAAM4F,KAAI,SAAAxE,GAAI,OACb,cAAC,GAAD,eAEQA,GADHA,EAAKhB,UCVFyF,GAAU,WAGtB,IAAMtE,EAAW0B,cAEV7E,EAAS+E,aAAY,SAAAC,GAAK,OAAIA,EAAMlE,QAApCd,KAeP,OACC,wBAAOmF,UAAU,mBAAjB,UAEC,sBACAA,UAAU,0BADV,UAEC,qBAAIA,UAAU,OAAd,UAEC,mBAAGA,UAAU,eACb,qCAAQnF,EAAR,UAGD,wBACAmF,UAAU,cACVQ,QAxBkB,WACpBxC,EN6DE,uCAAO,WAAOA,GAAP,SAAA3B,EAAA,sEACGtB,IAASY,OAAO4G,UADnB,OAGHvE,EAAUwB,KACVxB,EDyEsB,CAC7BhC,KAAKH,IC9EK,2CAAP,wDMxCA,uBASD,sBACAmE,UAAU,6BACVQ,QA3BkB,WACnBxC,EPdD,uCAAO,WAAMA,EAASG,GAAf,mBAAA9B,EAAA,6DAICD,EAAO+B,IAAWxC,KAAlBS,IAGDoG,EAAU,CACf7D,MAAM,GACNrB,KAAK,GACLuE,MAAM,IAAIY,MAAOC,WAVZ,SAgBYlH,EAAGc,WAAH,UAAiBF,EAAjB,mBAAsCuG,IAAIH,GAhBtD,OAgBAlE,EAhBA,OAoBLN,EAASJ,EAAWU,EAAIzB,GAAG2F,IAC3BxE,EAASF,EAAWQ,EAAIzB,GAAG2F,IArBtB,2CAAP,0DOsCE,UAIC,mBAAGxC,UAAU,+BACb,mBAAGA,UAAU,OAAb,0BAKD,cAAC,GAAD,QCrDU4C,GAAmB,WAC/B,OACC,sBAAK5C,UAAU,wBAAf,UACC,iDAEC,uBAFD,wBAKA,mBAAGA,UAAU,+BCNH6C,GAAc,WAE1B,IAAM7E,EAAW0B,cAEVoD,EAAUlD,aAAY,SAAAC,GAAK,OAAEA,EAAMpD,SAAnCqG,OAwBP,OACC,sBAAK9C,UAAU,gBAAf,UAGA,qDAEA,uBACAnD,GAAG,eACHb,KAAK,OACLnB,KAAK,OACLmH,MAAO,CAACe,QAAQ,QAChB1C,SAtBuB,SAACf,GAGzB,IAAMtC,EAAOsC,EAAE1E,OAAOoI,MAAM,GAExBhG,GACHgB,ETqF4B,SAAChB,GAC9B,8CAAO,WAAOgB,EAASG,GAAhB,iBAAA9B,EAAA,6DACQuB,EAAcO,IAAW1B,MAAhCqG,OAEPrE,IAAKC,KAAK,CACTC,MAAM,eACNsE,KAAK,iBACLC,mBAAkB,EAClBC,aAAa,WACZ1E,IAAK2E,iBARD,SAagBrG,EAAWC,GAb3B,OAaAqG,EAbA,OAcNzF,EAAWQ,IAAMiF,EAGjBrF,EAASE,EAAeN,IAExBa,IAAK6E,QAnBC,2CAAP,wDStFUC,CAAevG,OAmBxB,gCACC,wBACAgD,UAAU,cACVQ,QAjCwB,WAEzBgD,SAASC,cAAc,iBAAiBC,SA6BvC,qBAOA,wBACA1D,UAAU,cACVQ,QA7CiB,WAElBxC,EAASE,EAAe4E,KAyCvB,yBChDUa,GAAa,WAEzB,IAAM3F,EAAW0B,cAGH7B,EAAQ+B,aAAY,SAAAC,GAAK,OAAEA,EAAMpD,SAAxCqG,OALwB,EAOa1I,EAAQyD,GAPrB,mBAOxBkC,EAPwB,KAObpF,EAPa,KAOKF,EAPL,KAUxB6C,EAAkByC,EAAlBzC,KAAMqB,EAAYoB,EAAZpB,MAAM9B,EAAMkD,EAANlD,GAIb+G,EAAWC,iBAAOhG,EAAKiG,IAG7BC,qBAAU,WAGJlG,EAAKhB,KAAM+G,EAASI,UACtBvJ,EAAMoD,GACN+F,EAASI,QAAUnG,EAAKhB,MAGzB,CAACgB,EAAKpD,IAGTsJ,qBAAU,WAET/F,EAASJ,EAAWmC,EAAWlD,GAAZ,eAAmBkD,OAEpC,CAACA,EAAW/B,IAQf,OACC,sBAAKgC,UAAU,sBAAf,UAEC,cAAC,GAAD,IAEA,sBAAKA,UAAU,iBAAf,UACC,uBACAhE,KAAK,OACLmE,YAAY,qBACZH,UAAU,qBACVI,aAAa,MACbvF,KAAK,QACLwF,SAAU1F,EACVG,MAAO6D,IAGP,0BACCwB,YAAY,qBACZH,UAAU,kBACVnF,KAAK,OACLwF,SAAU1F,EACVG,MAAOwC,IAQNO,EAAKO,KAGL,qBAAK4B,UAAU,eAAf,SACA,qBAAKU,IAAK7C,EAAKO,IACfuC,IAAI,gBAQP,wBACAX,UAAU,yBACVQ,QAlDmB,WAGpBxC,EV6F0B,SAACnB,GAC5B,8CAAO,WAAMmB,EAASG,GAAf,eAAA9B,EAAA,6DACAD,EAAO+B,IAAWxC,KAAKS,IADvB,SAEAZ,EAAG8C,IAAH,UAAUlC,EAAV,0BAA+BS,IAAMoH,SAFrC,OAINjG,EAASY,EAAW/B,IAJd,2CAAP,wDU9FUqH,CAAcrH,KA6CtB,wBClFUsH,GAAgB,WAAM,IAI3BrB,EAAUlD,aAAY,SAAAC,GAAK,OAAIA,EAAMpD,SAArCqG,OAEP,OACC,sBAAK9C,UAAU,0EAAf,UACC,cAAC,GAAD,IAEA,+BAOG8C,EACE,cAAC,GAAD,IACA,cAAC,GAAD,U,SClBKsB,GAAe,SAAC,GAStB,IAPPC,EAOM,EAPNA,gBAGUC,EAIJ,EAJN3C,UAEG4C,EAEG,gDASL,OAEC,aADD,CACE,IAAD,2BAAWA,GAAX,IAEA5C,UAAW,SAAC6C,GAAD,OAETH,EAEE,cAACC,EAAD,eAAeE,IAEhB,cAAC,IAAD,CAAU5D,GAAG,oBC5BL6D,GAAc,SAAC,GASrB,IAPPJ,EAOM,EAPNA,gBAGUC,EAIJ,EAJN3C,UAEG4C,EAEG,gDAEL,OAEC,aADD,CACE,IAAD,2BAAWA,GAAX,IAEA5C,UAAW,SAAC6C,GAAD,OAETH,EAEE,cAAC,IAAD,CAAUzD,GAAG,MAEb,cAAC0D,EAAD,eAAeE,SCfRE,GAAY,WAIxB,IAAM1G,EAAW0B,cAJa,EASEpF,oBAAS,GATX,mBASvBqK,EATuB,KASbC,EATa,OAaKtK,oBAAS,GAbd,mBAavBuK,EAbuB,KAaZC,EAbY,KAiD/B,OA3BCf,qBAAU,WACThJ,IAASY,OAAOoJ,mBAAhB,uCAAmC,WAAM7F,GAAN,SAAA7C,EAAA,uDAIjC,OAAI6C,QAAJ,IAAIA,OAAJ,EAAIA,EAAM9C,MAGT4B,EAASmB,EAAMD,EAAK9C,IAAI8C,EAAKE,cAE7B0F,GAAc,GAKd9G,EAASD,EAAkBmB,EAAK9C,OAGhC0I,GAAc,GAIfF,GAAY,GArBqB,2CAAnC,yDAuBC,CAAC5G,EAAS4G,EAAYE,IAGrBH,EAGF,yCASE,cAAC,IAAD,UACC,8BACC,eAAC,IAAD,WACA,cAAC,GAAD,CACAN,gBAAmBQ,EACnBnD,KAAK,QACLC,UAAWH,IAEX,cAAC,GAAD,CACAC,OAAK,EACL4C,gBAAmBQ,EACnBnD,KAAK,IACLC,UAAWwC,KAIX,cAAC,IAAD,CAAUvD,GAAG,wB,SCjFbvG,GAAe,CACpBsF,SAAQ,EACRmB,SAAS,M,kBCWHkE,GAAgB,CACtBvI,MAAM,GACNqG,OAAO,MChBFmC,GAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,KAOrGC,GAAWC,aAAgB,CAChC3J,KCR0B,WAA2B,IAAzBkE,EAAwB,uDAAhB,GAAI0F,EAAY,uCAEjD,OAASA,EAAOvJ,MACZ,KAAKH,EACD,MAAO,CACHO,IAAKmJ,EAAOtJ,QAAQG,IACpBvB,KAAM0K,EAAOtJ,QAAQmD,aAG7B,KAAKvD,EACG,MAAO,GAEf,QACI,OAAOgE,IDJlBC,GFEwB,WAAiC,IAAhCD,EAA+B,uDAAvBxF,GAAakL,EAAU,uCAExD,OAAQA,EAAOvJ,MACd,KAAKH,EACJ,OAAO,2BACHgE,GADJ,IAECiB,SAASyE,EAAOtJ,UAIjB,KAAKJ,EACL,OAAO,2BACHgE,GADJ,IAECiB,SAAS,OAKX,KAAKjF,EACL,OAAO,2BACHgE,GADJ,IAECF,SAAQ,IAGT,KAAK9D,EACL,OAAO,2BACHgE,GADJ,IAECF,SAAQ,IAKT,QAEC,OAAOE,IEnCTpD,MDU4B,WAA+B,IAA9BoD,EAA6B,uDAAvBmF,GAAcO,EAAS,uCAGzD,OAAQA,EAAOvJ,MAGf,KAAKH,EACL,kCACIgE,GADJ,IAECpD,MAAM,CAAC8I,EAAOtJ,SAAT,oBAAoB4D,EAAMpD,UAIhC,KAAKZ,EAGJ,kCACIgE,GADJ,IAECiD,OAAO,eACHyC,EAAOtJ,WAIb,KAAKJ,EAEJ,kCACIgE,GADJ,IAECpD,MAAM,aAAI8I,EAAOtJ,WAInB,KAAKJ,EAEJ,kCACIgE,GADJ,IAECpD,MAAMoD,EAAMpD,MAAM4F,KACjB,SAAAxE,GAAI,OAAIA,EAAKhB,KAAO0I,EAAOtJ,QAAQY,GACjC0I,EAAOtJ,QAAQ4B,KACfA,OAIL,KAAKhC,EACJ,kCACIgE,GADJ,IAECiD,OAAO,KACPrG,MAAMoD,EAAMpD,MAAM+I,QAAO,SAAA3H,GAAI,OAAIA,EAAKhB,KAAO0I,EAAOtJ,aAGrD,KAAKJ,EACL,OAAO,2BACHgE,GADJ,IAECiD,OAAO,KACPrG,MAAM,KAGR,QACA,OAAOoD,MC/DI4F,GAAOC,aAAYL,GAE/BJ,GAECU,aAAgBC,QErBLC,GAAa,WACzB,OAEC,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACA,cAAC,GAAD,O,OCJFK,IAASC,OAAO,cAAE,GAAF,IAAgBvC,SAASwC,eAAe,W","file":"static/js/main.8b1c0e80.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = (newFormState = initialState) => {\r\n        setValues( newFormState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import  firebase from 'firebase';\r\nimport 'firebase/firebase';\r\nimport 'firebase/auth';\r\n\r\n const firebaseConfig = {\r\n    apiKey: \"AIzaSyAXr83ffE_fctk1yM0OEG4V5bkRQXEhg3k\",\r\n    authDomain: \"journalapp-react-2b5f7.firebaseapp.com\",\r\n    databaseURL: \"https://journalapp-react-2b5f7.firebaseio.com\",\r\n    projectId: \"journalapp-react-2b5f7\",\r\n    storageBucket: \"journalapp-react-2b5f7.appspot.com\",\r\n    messagingSenderId: \"567903171795\",\r\n    appId: \"1:567903171795:web:31fe26407e5f29e9ee1026\"\r\n  };\r\n  // Initialize Firebase\r\n  //esta es la base de datos\r\n  firebase.initializeApp(firebaseConfig);\r\n//esta es la referencia a firestore\r\n  const db = firebase.firestore();\r\n//esto es para poder hacer autenticaciones con google\r\n  const googleAuthProvider = new firebase.auth.GoogleAuthProvider(); \r\n\r\n//estas son las exportaciones a usar en el archivo auth\r\nexport {\r\n\tdb,\r\n\tgoogleAuthProvider,\r\n\tfirebase\r\n}\r\n","export const types={\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Updated note',\r\n    notesFileUrl: '[Notes] Updated image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\r\n}","import {types} from '../types/types'\r\n\r\n\r\n\r\nexport const setError = (err)=>({\r\n\ttype:types.uiSetError,\r\n\tpayload:err\r\n});\r\n\r\nexport const removeError = ()=>({\r\n\ttype:types.uiRemoveError\r\n\t\r\n\t\r\n});\r\n\r\nexport const startLoading = ()=>({\r\n\ttype:types.uiStartLoading\r\n})\r\n\r\nexport const finishLoading = ()=>({\r\n\ttype:types.uiFinishLoading\r\n})","import {db} from '../firebase/firebase-config'\r\n\r\n\r\n//cargar notas de firestore\r\nexport const loadNotes = async(uid) =>{\r\n\t//creamos el path de notes junto con el metodo get de firebase\r\n\tconst notesSnap = await\tdb.collection(`${uid}/journal/notes`).get();\r\n\r\n\tconst notes = [];\r\n\r\n\tnotesSnap.forEach( snaphijo =>  {\r\n\t\tnotes.push({\r\n\t\t\tid:snaphijo.id,\r\n\t\t\t...snaphijo.data()\r\n\r\n\t\t})\r\n\t});\r\n\r\n//console.log(notes)\r\n\r\n\r\n\treturn notes\r\n\r\n}","//'https://api.cloudinary.com/v1_1/dnkqzaolo/upload';\r\n\r\n\r\nexport const fileUpload = async ( file ) => {\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/dnkqzaolo/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset','react-journal');\r\n    formData.append('file', file );\r\n\r\n    try {\r\n        \r\n        const resp = await fetch( cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if ( resp.ok ) {\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        } else {\r\n            throw await resp.json();\r\n        }\r\n\r\n    } catch (err) {\r\n        throw err;\r\n    }\r\n\r\n\r\n    // return url de la imagen\r\n}","import Swal from 'sweetalert2';\r\nimport {db} from '../firebase/firebase-config';\r\nimport {types} from '../types/types';\r\nimport {loadNotes} from '../helpers/loadNotes';\r\nimport {fileUpload} from '../helpers/fileUpload';\r\n\r\nexport const startNewNote = ()=>{\r\n\treturn async(dispatch,getState)=>{\r\n\t\t//getState es una funcion que permite \r\n\t\t//obtener el state de la app es parecido al useSelector\r\n\t\t//accedemos al uid del usuario\r\n\t\tconst {uid} = getState().auth;\r\n\r\n\r\n\t\tconst newNote = {\r\n\t\t\ttitle:'',\r\n\t\t\tbody:'',\r\n\t\t\tdate: new Date().getTime()\r\n\t\t}\r\n\t\t\r\n\t\t//creamos el documento en firebase\r\n\t\t//con documento(journal) coleccion(notes) \t\t\r\n\t\t//add es una prmesa por lo tanto podemos utilizar async await\r\n\t\tconst doc = await db.collection(`${uid}/journal/notes`).add(newNote);\r\n\r\n\t\t //console.log(doc)\r\n\t\t //aqui enviamos el dispatch al reducer\r\n\t\t dispatch(activeNote(doc.id,newNote));\r\n\t\t dispatch(AddNewNote(doc.id,newNote));\r\n\t}\r\n}\r\n\r\n\r\n///creamos los datos que el note reducer nececita\r\n\r\nexport const activeNote = (id,note)=>({\r\n\ttype:types.notesActive,\r\n\tpayload:{\r\n\t\tid,\r\n\t\t...note\r\n\t}\r\n});\r\n\r\nexport const AddNewNote= (id,note)=>({\r\n\ttype:types.notesAddNew,\r\n\tpayload:{\r\n\t\tid,...note\r\n\t}\r\n})\r\n\r\nexport const startLoadingNotes = (uid)=>{\r\n\treturn async (dispatch)=> {\r\n\t\tconst notes = await loadNotes(uid);\r\n\t\tdispatch(setNotes(notes))\r\n\t}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n//cargando las notas de la base de datos\r\n\r\nexport  const setNotes = (notes) =>({\r\n\r\n\ttype:types.notesLoad,\r\n\tpayload: notes\r\n\r\n\t\r\n});\r\n\r\n\r\nexport const startSaveNotes = (note)=>{\r\n\r\n\treturn async (dispatch,getState)=>{\r\n\t\t//getState es una funcion que permite \r\n\t\t//obtener el state de la app es parecido al useSelector\r\n\t\t//accedemos al uid del usuario\r\n\t\tconst {uid} = getState().auth;\r\n\r\n\t\t//si no viene en la nota el url se borra\r\n\t\tif(!note.url){\r\n\t\t\tdelete note.url;\r\n\t\t}\r\n\r\n\t\t\r\n\t\tconst noteToFirestore= {...note};\r\n\t\t//eliminamos el id de la nota ya que viene\r\n\t\t//id de firestore\r\n\t\tdelete noteToFirestore.id;\r\n\t\tawait db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore)\r\n\t\r\n\t\tdispatch(refreshNote(note.id,noteToFirestore))\r\n\t\tSwal.fire('Saved',note.title,'success');\r\n\r\n\t}\r\n\r\n}\r\n\r\n\r\nexport const refreshNote = (id,note)=>({\r\n\ttype:types.notesUpdated,\r\n\tpayload:{\r\n\t\tid,\r\n\t\tnote:{\r\n\t\t\tid,\r\n\t\t\t...note\r\n\t\t}\r\n\t}\r\n})\r\n\r\n\r\nexport const startUploading  =(file)=>{\r\n\treturn async (dispatch,getState)=>{\r\n\t\tconst {active:activeNote} = getState().notes;\r\n\r\n\t\tSwal.fire({\r\n\t\t\ttitle:'Uploading...',\r\n\t\t\ttext:'Please wait...',\r\n\t\t\tallowOutsideClick:false,\r\n\t\t\tonBeforeOpen:()=>{\r\n\t\t\t\tSwal.showLoading();\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t\tconst fileUrl = await fileUpload(file)\r\n\t\tactiveNote.url = fileUrl\r\n\t\t//console.log(fileUrl)\r\n\r\n\t\tdispatch(startSaveNotes(activeNote))\r\n\r\n\t\tSwal.close();\r\n\t}\r\n}\r\n\r\nexport const startDeleting =(id)=>{\r\n\treturn async(dispatch,getState)=>{\r\n\t\tconst uid  = getState().auth.uid; \r\n\t\tawait db.doc(`${uid}/journal/notes/${id}`).delete();\r\n\t\t\r\n\t\tdispatch(deleteNote(id));\r\n\r\n\t}\r\n}\r\n\r\n\r\nexport const deleteNote = (id)=>({\r\n\ttype:types.notesDelete,\r\n\tpayload:id\r\n})\r\n\r\n\r\nexport const noteLogout =()=>({\r\n\ttype:types.notesLogoutCleaning\r\n\r\n})\r\n\r\n\r\n\r\n","import Swal from 'sweetalert2';\r\n\r\nimport { firebase, googleAuthProvider } from '../firebase/firebase-config';\r\nimport { types } from '../types/types';\r\nimport { startLoading, finishLoading } from './ui';\r\nimport {noteLogout } from './notes'\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return (dispatch) => {\r\n\r\n        dispatch( startLoading() );\r\n        \r\n        \r\n        firebase.auth().signInWithEmailAndPassword( email, password )\r\n            .then( ({ user }) => {\r\n                dispatch(login( user.uid, user.displayName ));\r\n\r\n                dispatch( finishLoading() );\r\n            })\r\n            .catch( e => {\r\n                //console.log(e);\r\n                dispatch( finishLoading() );\r\n                Swal.fire('Error', e.message, 'error');\r\n            })\r\n\r\n        \r\n        \r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = ( email, password, name ) => {\r\n    return ( dispatch ) => {\r\n\r\n        firebase.auth().createUserWithEmailAndPassword( email, password )\r\n            .then( async({ user }) => {\r\n\r\n                await user.updateProfile({ displayName: name });\r\n\r\n                dispatch(\r\n                    login( user.uid, user.displayName )\r\n                );\r\n            })\r\n            .catch( e => {\r\n                //console.log(e);\r\n                Swal.fire('Error', e.message, 'error');\r\n            })\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const startGoogleLogin = () => {\r\n    return ( dispatch ) => {\r\n\r\n        firebase.auth().signInWithPopup( googleAuthProvider )\r\n            .then( ({ user }) => {\r\n                dispatch(\r\n                    login( user.uid, user.displayName )\r\n                )\r\n            });\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const login = (uid, displayName) => ({\r\n    type: types.login,\r\n    payload: {\r\n        uid,\r\n        displayName\r\n    }\r\n});\r\n\r\n\r\nexport const startLogout = () => {\r\n    return async( dispatch ) => {\r\n        await firebase.auth().signOut();\r\n\r\n        dispatch( logout() );\r\n        dispatch(noteLogout()); \r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n})\r\n\r\n\r\n","import React from 'react';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport {useForm} from '../../hooks/useForm';\r\nimport {startLoginEmailPassword,startGoogleLogin,} from '../../actions/auth'\r\n\r\nexport const LoginScreen = () => {\r\n\r\n\tconst dispatch=useDispatch();\r\n\r\n    const {loading} = useSelector(state =>state.ui)\r\n\r\n\tconst [formValues,handleInputChange] = useForm({\r\n\t\temail:'demo@gmail.com',\r\n\t\tpassword:'123456'\r\n\r\n\t});\r\n\r\n\r\n\tconst {email, password}=formValues;\r\n\r\n\r\n\tconst handleLogin = (e)=>{\r\n\t\te.preventDefault();\r\n        \r\n\t\tdispatch(startLoginEmailPassword(email,password))\t\r\n\t}\r\n\r\n    const handleGoogleLogin = ()=>{\r\n        dispatch(startGoogleLogin());\r\n    }\r\n\r\n\treturn (\r\n    \r\n       \r\n\r\n\t\t<div>\r\n\t\t\t <h3 className=\"auth__title\">Login</h3>\r\n\r\n            <form onSubmit={ handleLogin } className=\"animate__animated animate__fadeIn animate__faster\">\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ email }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={ password }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disable={loading.toString()}\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                \r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with social networks</p>\r\n\r\n                    <div \r\n                        className=\"google-btn\"\r\n                       onClick={handleGoogleLogin}\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link \r\n                    to=\"/auth/register\"\r\n                    className=\"link\"\r\n                >\r\n                    Create new account    \r\n                </Link>\r\n\r\n            </form>\r\n\r\n\r\n\r\n\t\r\n\r\n            </div>\r\n\t)\r\n}\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector} from 'react-redux';\r\nimport validator from 'validator';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { setError, removeError } from '../../actions/ui';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    //es un hook que useSelector permite recibir el state \r\n    const { msgError } = useSelector( state => state.ui );\r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: '',\r\n    });\r\n\r\n    const { name ,email ,password ,password2 } = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( isFormValid() ) {\r\n            dispatch( startRegisterWithEmailPasswordName(email, password, name) );\r\n        }\r\n\r\n    }\r\n\r\n    const isFormValid = () => {\r\n        \r\n        if ( name.trim().length === 0 ) {\r\n            dispatch( setError('Name is required') )\r\n            return false;\r\n        } else if ( !validator.isEmail( email ) ) {\r\n            dispatch( setError('Email is not valid') )\r\n            return false;\r\n        } else if ( password !== password2 || password.length < 5 ) {\r\n            dispatch( setError('Password should be at least 6 characters and match each other') )\r\n            return false\r\n        }\r\n        \r\n        dispatch( removeError() );\r\n       return true;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n\r\n            <form onSubmit={ handleRegister } className=\"animate__animated animate__fadeIn animate__faster\">\r\n\r\n                {\r\n                    msgError &&\r\n                    (\r\n                        <div className=\"auth__alert-error\">\r\n                            { msgError }\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ name }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ email }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={ password }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={ password2 }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                >\r\n                    Register\r\n                </button>\r\n\r\n               \r\n\r\n                <Link \r\n                    to=\"/auth/login\"\r\n                    className=\"link\"\r\n                >\r\n                    Already registered?\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n//1- importar Router,Switch\r\nimport {Switch,Route,Redirect} from 'react-router-dom';\r\n//2-importar los componentes para establecer las rutas\r\nimport {LoginScreen} from '../components/auth/LoginScreen'\r\nimport {RegisterScreen } from '../components/auth/RegisterScreen'\r\nexport const AuthRouter = () => {\r\n\treturn (\r\n\t\t<div className=\"auth__main\">\r\n\t\t\t\r\n\t\t\t<div className=\"auth__box-container\">\r\n\r\n\r\n\t\t\t<Switch>\r\n\t\t\t<Route\r\n\t\t\texact\t\r\n\t\t\tpath=\"/auth/login\"\t\r\n\t\t\tcomponent={LoginScreen}\r\n\t\t\t/>\r\n\t\r\n\t\t\t<Route\r\n\t\t\texact\r\n\t\t\tpath=\"/auth/register\"\r\n\t\t\tcomponent={RegisterScreen}\r\n\t\t\t/>\r\n\r\n\t\t\t<Redirect to=\"/auth/login\"/>\r\n\r\n\t\t\t</Switch>\r\n\r\n\r\n\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t\t\r\n\t\t\r\n\t)\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport {useDispatch} from 'react-redux';\r\nimport moment from 'moment'\r\nimport {activeNote} from '../../actions/notes'\r\nexport const JournalEntry = ({id,date,title,body,url}) => {\r\n\r\n\t//console.log(id,date,title,body,url)\r\n\tconst dispatch = useDispatch()\r\n\r\n\tconst noteDate = moment(date);\r\n\r\n\r\n\tconst handleEntryClick = ()=>{\r\n\t\tdispatch(activeNote(id,{\r\n\t\t\tdate,title,body,url\r\n\t\t}))\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"journal__entry pointer animate__animated animate__fadeIn animate__faster \"\r\n\t\tonClick ={ handleEntryClick}\r\n\t\t>\r\n\t\t\t\r\n\r\n\t\t\t{ \r\n\t\t\t\turl &&\r\n\t\t\t<div\r\n\t\t\tclassName=\"journal__entry-picture\"\r\n\t\t\tstyle={{\r\n\t\t\t\t\tbackgroundSize :'cover',\r\n\t\t\t\t\tbackgroundImage : `url(${url})`\r\n\t\t\t      }}\r\n\t\t\t></div>\r\n\t\t\t}\r\n\r\n\r\n\t\t\t\r\n\r\n\t\t\t<div className=\"journal__entry-body\"> \r\n\t\t\t\t<p className=\"journal__entry-title\">\r\n\t\t\t\t{title}\r\n\t\t\t\t</p>\r\n\t\t\t\t<p className=\"journal__entry-content\">\r\n\t\t\t\t{body}\r\n\t\t\t\t</p>\r\n\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t<div className=\"journal__entry-date-box\">\r\n\t\t\t\t<span>{noteDate.format('dddd')}</span>\r\n\t\t\t\t<h4>{noteDate.format('Do')}</h4>\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n","import React from 'react';\r\nimport {useSelector} from 'react-redux';\r\nimport {JournalEntry} from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n\r\n\tconst {notes} = useSelector(state => state.notes)\r\n\r\n\t//console.log(notes)\r\n\treturn (\r\n\t\t<div className=\"journal__entries \">\r\n\r\n\t\t\t{\r\n\t\t\t\tnotes.map(note=>(\r\n\t\t\t\t\t<JournalEntry\r\n\t\t\t\t\tkey={note.id}\r\n\t\t\t\t\t    {...note}\r\n\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t))\r\n\t\t\t}\t\r\n\t\t\t\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n","import React from 'react';\r\nimport {JournalEntries} from './JournalEntries';\r\nimport {useDispatch,useSelector} from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\nimport {startNewNote} from '../../actions/notes'\r\nexport const Sidebar = () => {\r\n\r\n\r\n\tconst dispatch = useDispatch();\r\n\t//extraemos el nombre logeado\r\n\tconst {name} =  useSelector(state => state.auth)\r\n\t//console.log(auth)\r\n\t\r\n\r\n\tconst handleLogout = ()=>{\r\n\t\tdispatch( startLogout())\r\n\t\t//console.log('click')\r\n\t}\r\n\r\n\r\n\tconst handleAddNew =()=>{\r\n\t\tdispatch(startNewNote());\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<aside className=\"journal__sidebar\">\r\n\t\t\t\r\n\t\t\t<div \r\n\t\t\tclassName=\"journal__sidebar-navbar\">\r\n\t\t\t\t<h3 className=\"mt-5\">\r\n\r\n\t\t\t\t\t<i className=\"fa fa-moon\"></i>\r\n\t\t\t\t\t<span> {name} </span>\r\n\t\t\t\t</h3>\r\n\r\n\t\t\t\t<button \r\n\t\t\t\tclassName=\"btn pointer\"\r\n\t\t\t\tonClick = { handleLogout}\r\n\t\t\t\t>\r\n\t\t\t\tLogout\r\n\t\t\t\t</button>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t\t<div \r\n\t\t\tclassName=\"journal__new-entry pointer\"\r\n\t\t\tonClick={handleAddNew}\r\n\t\t\t>\r\n\t\t\t\t<i className=\"far fa-calendar-plus fa-5x\"></i>\r\n\t\t\t\t<p className=\"mt-5\">\r\n\t\t\t\t\tNew Entry\r\n\t\t\t\t</p>\r\n\t\t\t</div>\t\r\n\r\n\t\t\t<JournalEntries/>\r\n\r\n\r\n\r\n\t\t</aside>\r\n\t)\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport const NothingSelected  = () => {\r\n\treturn (\r\n\t\t<div className=\"nothing__main-content\">\r\n\t\t\t<p>\r\n\t\t\t\tSelect something\r\n\t\t\t\t<br/>\r\n\t\t\t\tpr create an entry\r\n\t\t\t</p>\r\n\t\t\t<i className=\"far fa-star fa-4x mt-5\"></i>\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n","import React from 'react';\r\nimport {startSaveNotes} from '../../actions/notes'; \r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport {startUploading } from '../../actions/notes'\r\nexport const NotesAppBar = () => {\r\n\r\n\tconst dispatch = useDispatch();\r\n\t//renombrado active a note \r\n\tconst {active} = useSelector(state=>state.notes)\r\n\r\n\r\n\tconst handleSave = ()=>{\r\n\t\t//console.log(note)\r\n\t\tdispatch(startSaveNotes(active))\r\n\t}\r\n\r\n\tconst handlePictureClick =()=>{\r\n\t\t//console.log('cucaaaa!!!')\r\n\t\tdocument.querySelector('#fileSelector').click();\r\n\t}\r\n\r\nconst handleFileChange = (e)=>{\r\n\t//e.preventDefault()\r\n\t//console.log(e.target.files)\r\n\tconst file = e.target.files[0]\r\n\r\n\tif (file) {\r\n\t\tdispatch(startUploading(file))\r\n\t}\r\n}\r\n\r\n\r\n\treturn (\r\n\t\t<div className=\"notes__appbar\">\r\n\r\n\t\t\r\n\t\t<span>18 Noviembre 2020</span>\r\n\r\n\t\t<input\r\n\t\tid=\"fileSelector\"\r\n\t\ttype=\"file\"\r\n\t\tname=\"file\"\r\n\t\tstyle={{display:'none'}}\r\n\t\tonChange={handleFileChange}\r\n\t\t/>\r\n\r\n\t\t<div>\r\n\t\t\t<button \r\n\t\t\tclassName=\"btn pointer\"\r\n\t\t\tonClick= {handlePictureClick}\r\n\t\t\t>\r\n\t\t\t\tPicture\r\n\t\t\t</button>\r\n\t\t\t\r\n\t\t\t<button \r\n\t\t\tclassName=\"btn pointer\"\r\n\t\t\tonClick= {handleSave}\r\n\t\t\t>\r\n\t\t\t\tSave\r\n\t\t\t</button>\r\n\r\n\t\t</div>\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n","import React ,{useEffect,useRef} from 'react';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport {NotesAppBar} from './NotesAppBar';\r\nimport {useForm} from '../../hooks/useForm';\r\nimport {activeNote} from '../../actions/notes';\r\nimport {startDeleting} from '../../actions/notes';\r\nexport const NoteScreen = () => {\r\n\t\r\n\tconst dispatch = useDispatch()\t\r\n\r\n\t//renombrado activi a note \r\n\tconst {active:note} = useSelector(state=>state.notes)\r\n\t\r\n\tconst [formValues,handleInputChange,reset]= useForm(note);\r\n\r\n\t//console.log(formValues)\r\n\tconst {body ,title,id} = formValues\r\n\r\n\t//console.log(note)\r\n\r\n\tconst activeId = useRef(note.Id)\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\t//esto se dispara cuando\r\n\t\t//la nota activa sea otra a la actual\t\t  \r\n\t\t  if(note.id!== activeId.current){\r\n\t\t  \treset(note)\r\n\t\t  \tactiveId.current = note.id\r\n\t\t  }\r\n\r\n\t}, [note,reset])\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\t\r\n\t\tdispatch(activeNote(formValues.id,{...formValues}));\r\n\r\n\t}, [formValues,dispatch])\r\n\r\n\tconst handleDelete = ()=>{\r\n\t\t\r\n\r\n\t\tdispatch(startDeleting(id))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"notes__main-content\">\r\n\t\t\t\r\n\t\t\t<NotesAppBar/>\r\n\r\n\t\t\t<div className=\"notes__content\">\r\n\t\t\t\t<input \r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tplaceholder=\"Some awesome title\"\r\n\t\t\t\tclassName=\"notes__title-input\"\r\n\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\tname=\"title\"\r\n\t\t\t\tonChange={handleInputChange}\r\n\t\t\t\tvalue={title}\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tplaceholder=\"What happend today\"\r\n\t\t\t\t\tclassName=\"notes__textarea\"\r\n\t\t\t\t\tname=\"body\"\r\n\t\t\t\t\tonChange={handleInputChange}\r\n\t\t\t\t\tvalue={body}\r\n\t\t\t\t>\r\n\r\n\t\t\t\t</textarea>\r\n\r\n\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\t(note.url)\r\n\t\t\t\t\t&&\r\n\t\t\t\t\t\t(\t\t\r\n\t\t\t\t\t\t<div className=\"notes__image\">\r\n\t\t\t\t\t\t<img src={note.url} \r\n\t\t\t\t\t\talt=\"Imagen\"/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t</div>\r\n\r\n\t\t\t<button \r\n\t\t\tclassName=\"btn btn-danger pointer\"\r\n\t\t\tonClick={handleDelete}\r\n\r\n\t\t\t>\r\n\r\n\t\t\t\tDelete\r\n\r\n\t\t\t</button>\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n","import React from 'react'\r\nimport {Sidebar} from './Sidebar'\r\nimport {NothingSelected}  from './NothingSelected'\r\nimport {NoteScreen} from '../notes/NoteScreen'\r\nimport {useSelector} from 'react-redux';\r\n\r\nexport const JournalScreen = () => {\r\n\t\r\n\t//usamos use selector para tomar alguna prpiedad\r\n\t//del state o del store\r\n\tconst {active} = useSelector(state => state.notes) \r\n//className=\"animate__animated animate__fadeIn animate__faster\"\r\n\treturn (\r\n\t\t<div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\r\n\t\t\t<Sidebar/>\r\n\r\n\t\t\t<main>\r\n\r\n\t\t\t\t{\r\n\t\t\t\t\t/*si la nota tiene algo\r\n\t\t\t\t\tregresa NoteScreen y \r\n\t\t\t\t\tsino retorna NothingSelected\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t(active) \r\n\t\t\t\t\t? (<NoteScreen/>)\r\n\t\t\t\t\t: (<NothingSelected/>)\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\r\n\t\t\t</main>\r\n\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Route,Redirect } from 'react-router-dom'\r\n\r\n\r\n\r\n\r\nexport const PrivateRoute = ({\r\n\t//se recibe los props isAuthenticated para validar\r\nisAuthenticated,\r\n//el componente que se \r\n//quiere renderizar pero se renombra a mayuscula \r\ncomponent:Component,\r\n//...rest sera el resto de los componentes como exact path etc \r\n...rest\r\n\r\n}) => {\r\n\r\n\r\n//aqui se guarda en el localstorage la ultima  \r\n//ruta del usuario antes de salir\r\n//localStorage.setItem('lastPath',rest.location.pathname)\r\n\r\n\r\n//retorna una ruta \r\n\treturn (\r\n\t//retorna el rest}\r\n\t\t<Route {...rest}\r\n\t\t//se valida el componente con sus props history location etc\r\n\t\tcomponent={(props)=>(\r\n\t\t\t//si esta autenticado}\r\n\t\t\t(isAuthenticated)\r\n\t\t\t//entoces muestra el componente}\r\n\t\t\t? (<Component {...props}/>)\r\n\t\t\t//si no redirige al login\r\n\t\t\t:(<Redirect to=\"auth/login\"/>)\r\n\r\n\t\t\t)}\r\n\t\t/>\r\n\t\t\t\r\n\t\r\n\t)\r\n}\r\n\r\n//elementos requeridos\r\nPrivateRoute.propTypes = {\r\nisAuthenticated:PropTypes.bool.isRequired,\r\ncomponent:PropTypes.func.isRequired\r\n\r\n}\r\n\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Route,Redirect } from 'react-router-dom'\r\n\r\n\r\n\r\n\r\nexport const PublicRoute = ({\r\n\t//se recibe los props isAuthenticated para validar\r\nisAuthenticated,\r\n//el componente que se \r\n//quiere renderizar pero se renombra a mayuscula \r\ncomponent:Component,\r\n//...rest sera el resto de los componentes como exact path etc \r\n...rest\r\n\r\n}) => {\r\n//retorna una ruta \r\n\treturn (\r\n\t//retorna el rest}\r\n\t\t<Route {...rest}\r\n\t\t//se valida el componente con sus props history location etc\r\n\t\tcomponent={(props)=>(\r\n\t\t\t//si esta autenticado}\r\n\t\t\t(isAuthenticated)\r\n\t\t\t//entoces muestra el componente}\r\n\t\t\t?( <Redirect to=\"/\" />) \r\n\t\t\t//si no redirige al Dashboard\r\n\t\t\t:( <Component {...props} />)\r\n\r\n\t\t\t)}\r\n\t\t/>\r\n\t\t\t\r\n\t\r\n\t)\r\n}\r\n\r\n//elementos requeridos\r\nPublicRoute.propTypes = {\r\nisAuthenticated:PropTypes.bool.isRequired,\r\ncomponent:PropTypes.func.isRequired\r\n\r\n}\r\n\r\n","import React ,{useEffect,useState} from 'react';\r\n//1- importar Router,Switch,Route \r\nimport {BrowserRouter as Router,Switch,Redirect} from 'react-router-dom';\r\n//2-importar los archivos a los para establecer las rutas \r\nimport {useDispatch} from 'react-redux';\r\nimport {AuthRouter} from './AuthRouter';\r\nimport {JournalScreen} from '../components/juornal/JournalScreen';\r\nimport {firebase} from '../firebase/firebase-config';\r\nimport {login} from '../actions/auth'\r\nimport {PrivateRoute} from './PrivateRoute'\r\nimport {PublicRoute} from './PublicRoute'\r\nimport { startLoadingNotes} from '../actions/notes'\r\n//3-definir rutas dentro del switch\r\nexport const AppRouter = () => {\r\n\r\n\t\r\n\r\n\tconst dispatch = useDispatch();\r\n\t//permite saber  que se tiene respuesta de firebase\r\n\t//si un usario esta o en la base de datos\r\n\t//mientras cheking es true no se muestra nada de la app\r\n\t//solo el login y register\r\n\tconst [checking, setChecking] = useState(true)\r\n\r\n\t//chequeamos si esta logeado o si no esta logeado\r\n\t//se mantiene falso si no esta logeado\r\n\tconst [isLoggedIn,setIsLoggedIn] = useState(false)\r\n\r\n\t/* esta fucion useEffect se ejecuta cada \r\n\tvez que el estado de la autenticacion \r\n\tcuando obtenemos el uid o logout etc..\r\n\tademas mantiene la informacion sin perder el \r\n\testado al recargar la pagina\r\n\t*/\r\n\r\n\tuseEffect(() => {\r\n\t\tfirebase.auth().onAuthStateChanged(async(user)=>{\r\n \t\t\t//console.log(user)\r\n \t\t\t//user? = si el objeto user tiene al entoces pregunta el uid\r\n \t\t\t// si es null entoces sale \r\n \t\t\tif (user?.uid) {\r\n \t\t\t\t//diparamos la accion del login\r\n \t\t\t\t//login recibe el uid userDiplayname como argumentos\r\n \t\t\t\tdispatch(login(user.uid,user.displayName))\r\n \t\t\t\t//si entra usuario\r\n \t\t\t\tsetIsLoggedIn(true)\r\n\r\n \t\t\t\t//cargando las notas del usuario\r\n \t\t\t\t//para almacenarlo en el store\r\n \t\t\t\r\n \t\t\t\tdispatch(startLoadingNotes(user.uid))\r\n\r\n \t\t\t}else{\r\n \t\t\t\tsetIsLoggedIn(false)\r\n \t\t\t}\r\n\r\n \t\t\t//set cheking sabremos que ya firebase envio una respuesta\r\n \t\t\tsetChecking(false);\r\n\t\t})\r\n\t},[dispatch,setChecking,setIsLoggedIn])\r\n\r\n\r\nif (checking) {\r\n\r\n\treturn(\r\n\t\t<h1>Wait...</h1>\r\n\r\n\t\t)\r\n\t\r\n}\r\n\r\n\r\n\r\n\treturn (\r\n\t\t  <Router>\r\n\t\t  \t<div>\r\n\t\t  \t\t<Switch>\r\n\t\t  \t\t<PublicRoute\r\n\t\t  \t\tisAuthenticated = {isLoggedIn}\r\n\t\t  \t\tpath=\"/auth\"\r\n\t\t  \t\tcomponent={AuthRouter}/>\r\n\t\t  \t\t\r\n\t\t  \t\t<PrivateRoute\r\n\t\t  \t\texact\r\n\t\t  \t\tisAuthenticated = {isLoggedIn}\r\n\t\t  \t\tpath=\"/\"\r\n\t\t  \t\tcomponent={JournalScreen}\r\n\t\t  \t\t\r\n\t\t  \t\t/>\r\n\r\n\t\t  \t\t<Redirect to=\"/auth/login\" />\r\n\t\t  \t    </Switch>\t\r\n\r\n\t\t  \t</div>\r\n\t\t  \t\r\n\r\n\r\n\t\t  </Router>\r\n\t)\r\n}\r\n","import {types} from '../types/types'\r\n\r\n\r\n/*ui reducer para el manejo de acciones de \r\nloading y mostrar mensajes de errores al\r\nusuario cuando se logea\r\n(ui reducer sera sincrono)\r\n*/\r\n\r\nconst initialState = {\r\n\tloading:false,\r\n\tmsgError:null\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport const uiReducer = (state = initialState,action) =>{\r\n\r\n\tswitch (action.type) {\r\n\t\tcase types.uiSetError:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmsgError:action.payload\r\n\t\t\t}\r\n\t\t\t\r\n\r\n\t\t\tcase types.uiRemoveError:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmsgError:null\r\n\t\t\t}\r\n\t\t\t\r\n\r\n\r\n\t\tcase types.uiStartLoading:\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tloading:true\r\n\t\t}\r\n\t\t\r\n\t\tcase types.uiFinishLoading:\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tloading:false\r\n\t\t}\r\n\t\t\r\n\r\n\r\n\t\tdefault:\r\n\t\t\t\r\n\t\t\treturn state;\r\n\t}\r\n\r\n} ","import { types } from '../types/types';\r\n\r\n/*Notes reducer\r\ncomo esrado inicial sera un objeto vacio\r\ny lugo recibe un action  y un objeto del tipo notes\r\n\r\n notes:[],\r\n active:null,\r\n active:{\r\n\tid:'123'\r\n\ttitle:'',\r\n\tbody:'',\r\n\timgUrl:'',\r\n\tdate :\r\n }\r\n\r\n\r\n */\r\n\r\n\r\n\r\n\r\nconst  inititalState = {\r\n\tnotes:[],\r\n\tactive:null\r\n}\r\n\r\n\r\n\texport const notesReducer = (state=inititalState,action)=>{\r\n\r\n\r\n\t\tswitch (action.type) {\r\n\r\n\r\n\t\tcase types.notesAddNew:\r\n\t\treturn{\r\n\t\t\t...state,\r\n\t\t\tnotes:[action.payload,...state.notes]\r\n\t\t}\t\r\n\t\t\t\r\n\t\t\r\n\t\tcase types.notesActive:\r\n\t\t//regresamos un nuevo estado junto con\r\n\t\t//lo que teniamos en el estado anterior\r\n\t\t\treturn{\r\n\t\t\t\t...state,\r\n\t\t\t\tactive:{\r\n\t\t\t\t\t...action.payload\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\tcase types.notesLoad:\r\n\t\t\t//console.log(action.payload)\r\n\t\t\treturn{\r\n\t\t\t\t...state,\r\n\t\t\t\tnotes:[...action.payload]\r\n\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\tcase types.notesUpdated:\r\n\t\t\t\r\n\t\t\treturn{\r\n\t\t\t\t...state,\r\n\t\t\t\tnotes:state.notes.map(\r\n\t\t\t\t\tnote => note.id === action.payload.id\r\n\t\t\t\t\t? action.payload.note\r\n\t\t\t\t\t: note\r\n\t\t\t\t\t)\r\n\t\t\t}\r\n\r\n\t\tcase types.notesDelete:\r\n\t\t\treturn{\r\n\t\t\t\t...state,\r\n\t\t\t\tactive:null,\r\n\t\t\t\tnotes:state.notes.filter(note => note.id !== action.payload)\r\n\t\t\t}\t\r\n\r\n\t\t\tcase types.notesLogoutCleaning:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tactive:null,\r\n\t\t\t\tnotes:[]\r\n\t\t\t}\t\r\n\t\t\t\r\n\t\tdefault:\r\n\t\treturn state;\r\n}\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {createStore,combineReducers,applyMiddleware,compose} from 'redux';\r\nimport {authReducer} from '../reducers/authReducer';\r\nimport {uiReducer} from '../reducers/uiReducer'\r\n//es un middleware thunk permite peticiones asincronas\r\nimport thunk from 'redux-thunk';\r\nimport {notesReducer} from '../reducers/notesReducers'\r\n\r\n//habilita la exrencion del dev tool y ademas de poder aplicar middleware\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\n//conbineReducers es una funcion que sirve para\r\n//almacenar todo las funciones reducer que luego pasan al createStore\r\n//con el fin de no refactorizar\r\n//este archivo tambien es conocido como root reducer\r\nconst reducers = combineReducers({\r\n\tauth:authReducer,\r\n\tui:uiReducer,\r\n\tnotes:notesReducer\r\n})\r\n\r\n//create store recibe un reducer y create store solo recibe un reducer nada mas\r\nexport const store =createStore(reducers,\r\n\t//configuaracion que permite trabajar acciones asincronas\r\n\tcomposeEnhancers(\r\n\r\n\t\tapplyMiddleware(thunk)\r\n\t\t)\r\n\t);","import { types } from '../types/types';\r\n/*\r\n    {\r\n        uid: 'jagdfjahdsf127362718',\r\n        name: 'Fernando'\r\n    }\r\n\r\n*/\r\nexport const authReducer = ( state = {}, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n\r\n        case types.logout:\r\n                return { }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {Provider} from 'react-redux';\r\nimport {AppRouter} from './routers/AppRouters.js';\r\nimport {store} from './store/store'\r\n/*Provider contiene toda la informacion del stores*/\r\nexport const AppJournal = () => {\r\n\treturn (\r\n\t\t\r\n\t\t<Provider store={store}>\r\n\t\t<AppRouter/>\r\n\t\t</Provider>\r\n\t)\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {AppJournal} from './AppJournal';\nimport './styles/styles.scss'\n\nReactDOM.render(< AppJournal />,document.getElementById('root')\n);\n\n"],"sourceRoot":""}